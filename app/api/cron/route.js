"use strict";(()=>{var e={};e.id=7557,e.ids=[7557],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},98216:e=>{e.exports=require("net")},74026:e=>{e.exports=require("string_decoder")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},6005:e=>{e.exports=require("node:crypto")},51492:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>$,requestAsyncStorage:()=>y,routeModule:()=>m,serverHooks:()=>v,staticGenerationAsyncStorage:()=>b});var o={};r.r(o),r.d(o,{GET:()=>g,runtime:()=>d});var s=r(4762),n=r(20515),i=r(4894),a=r(40379),l=r(13303),c=r(97690),u=r(7674);async function p({source:e,id:t,fallbackTitle:r=""}){let o=(await (0,l.ll)()).find(t=>t.key===e);if(!o)throw Error("无效的API来源");if(r)try{let s=(await (0,u.s)(o,r.trim())).find(r=>r.source.toString()===e.toString()&&r.id.toString()===t.toString());if(s)return s}catch(e){}let s=await (0,u.J)(o,t);if(!s)throw Error("获取视频详情失败");return s}let d="nodejs";async function g(e){console.log(e.url);try{return console.log("Cron job triggered:",new Date().toISOString()),f(),a.NextResponse.json({success:!0,message:"Cron job executed successfully",timestamp:new Date().toISOString()})}catch(e){return console.error("Cron job failed:",e),a.NextResponse.json({success:!1,message:"Cron job failed",error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()},{status:500})}}async function f(){await h(),await w()}async function h(){let e=await (0,l.iE)();if(e&&e.ConfigSubscribtion&&e.ConfigSubscribtion.URL&&e.ConfigSubscribtion.AutoUpdate)try{let t;let o=await fetch(e.ConfigSubscribtion.URL);if(!o.ok)throw Error(`请求失败: ${o.status} ${o.statusText}`);let s=await o.text();try{let e=(await r.e(7818).then(r.bind(r,27818))).default.decode(s);t=new TextDecoder().decode(e)}catch(e){throw console.warn("Base58 解码失败:",e),e}try{JSON.parse(t)}catch(e){throw Error("配置文件格式错误，请检查 JSON 语法")}e.ConfigFile=t,e.ConfigSubscribtion.LastCheck=new Date().toISOString(),e=(0,l.mL)(e),await c.db.saveAdminConfig(e)}catch(e){console.error("刷新配置失败:",e)}else console.log("跳过刷新：未配置订阅地址或自动更新")}async function w(){try{let e=await c.db.getAllUsers();process.env.USERNAME&&!e.includes(process.env.USERNAME)&&e.push(process.env.USERNAME);let t=new Map,r=async(e,r,o)=>{let s=`${e}+${r}`,n=t.get(s);return n||(n=p({source:e,id:r,fallbackTitle:o.trim()}).then(e=>{let r=Promise.resolve(e);return t.set(s,r),e}).catch(t=>(console.error(`获取视频详情失败 (${e}+${r}):`,t),null))),n};for(let t of e){console.log(`开始处理用户: ${t}`);try{let e=await c.db.getAllPlayRecords(t),o=Object.keys(e).length,s=0;for(let[o,n]of Object.entries(e))try{let[e,i]=o.split("+");if(!e||!i){console.warn(`跳过无效的播放记录键: ${o}`);continue}let a=await r(e,i,n.title);if(!a){console.warn(`跳过无法获取详情的播放记录: ${o}`);continue}let l=a.episodes?.length||0;l>0&&l!==n.total_episodes&&(await c.db.savePlayRecord(t,e,i,{title:a.title||n.title,source_name:n.source_name,cover:a.poster||n.cover,index:n.index,total_episodes:l,play_time:n.play_time,year:a.year||n.year,total_time:n.total_time,save_time:n.save_time,search_title:n.search_title}),console.log(`更新播放记录: ${n.title} (${n.total_episodes} -> ${l})`)),s++}catch(e){console.error(`处理播放记录失败 (${o}):`,e)}console.log(`播放记录处理完成: ${s}/${o}`)}catch(e){console.error(`获取用户播放记录失败 (${t}):`,e)}try{let e=await c.db.getAllFavorites(t),o=Object.keys(e).length,s=0;for(let[o,n]of Object.entries(e))try{let[e,i]=o.split("+");if(!e||!i){console.warn(`跳过无效的收藏键: ${o}`);continue}let a=await r(e,i,n.title);if(!a){console.warn(`跳过无法获取详情的收藏: ${o}`);continue}let l=a.episodes?.length||0;l>0&&l!==n.total_episodes&&(await c.db.saveFavorite(t,e,i,{title:a.title||n.title,source_name:n.source_name,cover:a.poster||n.cover,year:a.year||n.year,total_episodes:l,save_time:n.save_time,search_title:n.search_title}),console.log(`更新收藏: ${n.title} (${n.total_episodes} -> ${l})`)),s++}catch(e){console.error(`处理收藏失败 (${o}):`,e)}console.log(`收藏处理完成: ${s}/${o}`)}catch(e){console.error(`获取用户收藏失败 (${t}):`,e)}}console.log("刷新播放记录/收藏任务完成")}catch(e){console.error("刷新播放记录/收藏任务启动失败",e)}}let m=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/cron/route",pathname:"/api/cron",filename:"route",bundlePath:"app/api/cron/route"},resolvedPagePath:"/app/src/app/api/cron/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:y,staticGenerationAsyncStorage:b,serverHooks:v}=m,x="/api/cron/route";function $(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:b})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[677,9864,3001,6735,7690,7674],()=>r(51492));module.exports=o})();